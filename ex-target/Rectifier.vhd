-- File: ./ex-target/Rectifier.vhd
-- Generated by MyHDL 1.0dev
-- Date: Mon Oct  5 14:11:09 2015


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_10.all;

entity Rectifier is
    port (
        y: out signed (15 downto 0);
        y_dx: out signed (15 downto 0);
        x: in signed (15 downto 0)
    );
end entity Rectifier;
-- Rectified linear unit (ReLU) and derivative model using fixbv type.
-- 
-- :param y: return max(0, x) as fixbv
-- :param y_dx: return d/dx max(0, x) as fixbv
-- :param x: input value as fixbv
-- :param leaky_val: factor for leaky ReLU, 0.0 without
-- :param fix_min: fixbv min value
-- :param fix_max: fixbv max value
-- :param fix_res: fixbv resolution

architecture MyHDL of Rectifier is




begin





RECTIFIER_RELU: process (x) is
    variable zero: signed(15 downto 0);
    variable leaky: signed(15 downto 0);
begin
    if (x > zero) then
        y <= x;
    else
        y <= to_signed((leaky * x), 16);
    end if;
end process RECTIFIER_RELU;


RECTIFIER_RELU_DX: process (x) is
    variable zero: signed(15 downto 0);
    variable leaky: signed(15 downto 0);
    variable one: signed(15 downto 0);
begin
    if (x > zero) then
        y_dx <= one;
    else
        y_dx <= leaky;
    end if;
end process RECTIFIER_RELU_DX;

end architecture MyHDL;
